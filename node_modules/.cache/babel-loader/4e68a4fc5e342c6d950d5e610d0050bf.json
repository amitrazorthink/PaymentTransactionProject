{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport UserButton from \"./UserButton\";\nimport RadioButton from \"./RadioButton\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport saveTransaction from '../actions';\nimport { connect } from 'react-redux';\nvar btnName = [{\n  id: 1,\n  name: 'USER-A'\n}, {\n  id: 2,\n  name: 'USER-B'\n}, {\n  id: 3,\n  name: 'USER-C'\n}];\nvar radioBtn = [{\n  id: 1,\n  name: 'American Express'\n}, {\n  id: 2,\n  name: 'VISA'\n}, {\n  id: 3,\n  name: 'DBS PayLa'\n}];\n\nfunction Example() {\n  // Declare a new state variable, which we'll call \"count\"\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      transactionId = _useState2[0],\n      setTransactionId = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userName = _useState4[0],\n      setUserName = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      paymentMode = _useState6[0],\n      setPaymentMode = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      amount = _useState8[0],\n      setAmount = _useState8[1];\n\n  var _useReducer = useReducer(reducer, initialCount, init),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1]; // useEffect(\n  //         props.dispatch(saveTransaction({\n  //         transactionId,\n  //         userName,\n  //         paymentMode,\n  //         amount\n  //       })\n  //     ));\n\n\n  var handleSubmit = function handleSubmit(evt) {\n    evt.preventDefault();\n    alert(\"Submitting Name \".concat(userName));\n  };\n\n  return React.createElement(\"div\", null, React.createElement(\"form\", {\n    onSubmit: function onSubmit() {\n      return dispatch({\n        type: 'saveTransaction'\n      });\n    }\n  }, React.createElement(\"p\", null, \"You clicked times\"), btnName.map(function (item) {\n    return React.createElement(UserButton, {\n      name: item.name,\n      onClickHandler: function onClickHandler(name) {\n        setUserName(name);\n      }\n    });\n  }), radioBtn.map(function (item) {\n    return React.createElement(RadioButton, {\n      name: item.name,\n      onClickHandler: function onClickHandler(payment) {\n        setPaymentMode(payment);\n      }\n    });\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: function onChange(e) {\n      setAmount(e.target.value);\n    }\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Transfer\"\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    transactionId: state.transactionId,\n    userName: state.userName,\n    paymentMode: state.paymentMode,\n    amount: state.amount\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Example);","map":{"version":3,"sources":["/Users/amithkumar/with-redux-saga/components/Transactions.js"],"names":["UserButton","RadioButton","React","useState","useEffect","useReducer","saveTransaction","connect","btnName","id","name","radioBtn","Example","transactionId","setTransactionId","userName","setUserName","paymentMode","setPaymentMode","amount","setAmount","reducer","initialCount","init","state","dispatch","handleSubmit","evt","preventDefault","alert","type","map","item","payment","e","target","value","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import UserButton from \"./UserButton\";\nimport RadioButton from \"./RadioButton\";\nimport React, { useState, useEffect, useReducer} from 'react';\nimport  saveTransaction  from '../actions'\nimport { connect } from 'react-redux';\n\n\n\nconst btnName = [{\n    id: 1,\n    name: 'USER-A'\n    },\n    {\n        id: 2,\n        name: 'USER-B'\n        },\n        {\n            id: 3,    \n            name: 'USER-C'\n            },\n];\nconst radioBtn = [{\n    id: 1,\n    name: 'American Express'\n    },\n    {\n        id: 2,\n        name: 'VISA'\n        },\n        {\n            id: 3,\n            name: 'DBS PayLa'\n            },\n];\n\nfunction Example() {\n    // Declare a new state variable, which we'll call \"count\"\n    const [transactionId, setTransactionId] = useState(0);\n    const [userName, setUserName] = useState(0);\n    const [paymentMode, setPaymentMode] = useState(0);\n    const [amount, setAmount] = useState(0);\n    const [state, dispatch] = useReducer(reducer, initialCount, init);\n\n\n    // useEffect(\n    //         props.dispatch(saveTransaction({\n    //         transactionId,\n    //         userName,\n    //         paymentMode,\n    //         amount\n    //       })\n    //     ));\n    const handleSubmit = (evt) => {\n      evt.preventDefault();\n      alert(`Submitting Name ${userName}`)\n  }\n\n    return (\n      <div>\n            {/* <form onSubmit={handleSubmit} >         */}\n            <form onSubmit={() => dispatch({type: 'saveTransaction'})}>        \n            <p>You clicked times</p>\n             {\n                  btnName.map((item) => {\n                   return  <UserButton name={item.name} onClickHandler={(name) => { setUserName(name)}}/>\n                  })\n              }\n            {\n                  radioBtn.map(item => {\n                   return  <RadioButton name={item.name} onClickHandler={(payment) => { setPaymentMode(payment)}}/>\n                  })\n              }\n              <input type=\"text\" onChange={(e) => { setAmount(e.target.value)}}/>\n              <input type=\"submit\" value=\"Transfer\" />\n              {/* <p>{userName}</p>\n              <p>{paymentMode}</p>\n              <p>{amount}</p> */}\n            </form>\n         </div>\n    );\n  }\n\n  function mapStateToProps(state) {\n    return {\n        transactionId: state.transactionId,\n        userName: state.userName,\n        paymentMode: state.paymentMode,\n        amount: state.amount\n    }\n  }\n  \n  function mapDispatchToProps(dispatch) {\n    return {};\n  }\n  export default connect(mapStateToProps, mapDispatchToProps)(Example);\n"]},"metadata":{},"sourceType":"module"}