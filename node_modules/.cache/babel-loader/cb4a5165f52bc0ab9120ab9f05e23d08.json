{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar defaultButton = function defaultButton(props) {\n  return React.createElement(\"button\", props, props.children);\n};\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pagination, _React$Component);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"filterPages\", function (visiblePages, totalPages) {\n      return visiblePages.filter(function (page) {\n        return page <= totalPages;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getVisiblePages\", function (page, total) {\n      if (total < 7) {\n        return _this.filterPages([1, 2, 3, 4, 5, 6], total);\n      } else {\n        if (page % 5 >= 0 && page > 4 && page + 2 < total) {\n          return [1, page - 1, page, page + 1, total];\n        } else if (page % 5 >= 0 && page > 4 && page + 2 >= total) {\n          return [1, total - 3, total - 2, total - 1, total];\n        } else {\n          return [1, 2, 3, 4, 5, total];\n        }\n      }\n    });\n\n    _this.changePage = _this.changePage.bind(_assertThisInitialized(_this));\n    _this.state = {\n      visiblePages: _this.getVisiblePages(null, props.pages)\n    };\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.pages !== nextProps.pages) {\n        this.setState({\n          visiblePages: this.getVisiblePages(null, nextProps.pages)\n        });\n      }\n\n      this.changePage(nextProps.page + 1);\n    }\n  }, {\n    key: \"changePage\",\n    value: function changePage(page) {\n      var activePage = this.props.page + 1;\n\n      if (page === activePage) {\n        return;\n      }\n\n      var visiblePages = this.getVisiblePages(page, this.props.pages);\n      this.setState({\n        visiblePages: this.filterPages(visiblePages, this.props.pages)\n      });\n      this.props.onPageChange(page - 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$PageButto = this.props.PageButtonComponent,\n          PageButtonComponent = _this$props$PageButto === void 0 ? defaultButton : _this$props$PageButto;\n      var visiblePages = this.state.visiblePages;\n      var activePage = this.props.page + 1;\n      return React.createElement(\"div\", {\n        className: \"Table__pagination\"\n      }, React.createElement(\"div\", {\n        className: \"Table__prevPageWrapper\"\n      }, React.createElement(PageButtonComponent, {\n        className: \"Table__pageButton\",\n        onClick: function onClick() {\n          if (activePage === 1) return;\n\n          _this2.changePage(activePage - 1);\n        },\n        disabled: activePage === 1\n      }, this.props.previousText)), React.createElement(\"div\", {\n        className: \"Table__visiblePagesWrapper\"\n      }, visiblePages.map(function (page, index, array) {\n        return React.createElement(PageButtonComponent, {\n          key: page,\n          className: activePage === page ? \"Table__pageButton Table__pageButton--active\" : \"Table__pageButton\",\n          onClick: _this2.changePage.bind(null, page)\n        }, array[index - 1] + 2 < page ? \"...\".concat(page) : page);\n      })), React.createElement(\"div\", {\n        className: \"Table__nextPageWrapper\"\n      }, React.createElement(PageButtonComponent, {\n        className: \"Table__pageButton\",\n        onClick: function onClick() {\n          if (activePage === _this2.props.pages) return;\n\n          _this2.changePage(activePage + 1);\n        },\n        disabled: activePage === this.props.pages\n      }, this.props.nextText)));\n    }\n  }]);\n\n  return Pagination;\n}(React.Component);\n\n_defineProperty(Pagination, \"propTypes\", {\n  pages: PropTypes.number,\n  page: PropTypes.number,\n  PageButtonComponent: PropTypes.any,\n  onPageChange: PropTypes.func,\n  previousText: PropTypes.string,\n  nextText: PropTypes.string\n});\n\nexport { Pagination as default };","map":{"version":3,"sources":["/Users/amithkumar/with-redux-saga/components/Pagination.js"],"names":["React","PropTypes","defaultButton","props","children","Pagination","visiblePages","totalPages","filter","page","total","filterPages","changePage","bind","state","getVisiblePages","pages","nextProps","setState","activePage","onPageChange","PageButtonComponent","previousText","map","index","array","nextText","Component","number","any","func","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst defaultButton = props => <button {...props}>{props.children}</button>;\n\nexport default class Pagination extends React.Component {\n  constructor(props) {\n    super();\n\n    this.changePage = this.changePage.bind(this);\n\n    this.state = {\n      visiblePages: this.getVisiblePages(null, props.pages)\n    };\n  }\n\n  static propTypes = {\n    pages: PropTypes.number,\n    page: PropTypes.number,\n    PageButtonComponent: PropTypes.any,\n    onPageChange: PropTypes.func,\n    previousText: PropTypes.string,\n    nextText: PropTypes.string\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.pages !== nextProps.pages) {\n      this.setState({\n        visiblePages: this.getVisiblePages(null, nextProps.pages)\n      });\n    }\n\n    this.changePage(nextProps.page + 1);\n  }\n\n  filterPages = (visiblePages, totalPages) => {\n    return visiblePages.filter(page => page <= totalPages);\n  };\n\n  getVisiblePages = (page, total) => {\n    if (total < 7) {\n      return this.filterPages([1, 2, 3, 4, 5, 6], total);\n    } else {\n      if (page % 5 >= 0 && page > 4 && page + 2 < total) {\n        return [1, page - 1, page, page + 1, total];\n      } else if (page % 5 >= 0 && page > 4 && page + 2 >= total) {\n        return [1, total - 3, total - 2, total - 1, total];\n      } else {\n        return [1, 2, 3, 4, 5, total];\n      }\n    }\n  };\n\n  changePage(page) {\n    const activePage = this.props.page + 1;\n\n    if (page === activePage) {\n      return;\n    }\n\n    const visiblePages = this.getVisiblePages(page, this.props.pages);\n\n    this.setState({\n      visiblePages: this.filterPages(visiblePages, this.props.pages)\n    });\n\n    this.props.onPageChange(page - 1);\n  }\n\n  render() {\n    const { PageButtonComponent = defaultButton } = this.props;\n    const { visiblePages } = this.state;\n    const activePage = this.props.page + 1;\n\n    return (\n      <div className=\"Table__pagination\">\n        <div className=\"Table__prevPageWrapper\">\n          <PageButtonComponent\n            className=\"Table__pageButton\"\n            onClick={() => {\n              if (activePage === 1) return;\n              this.changePage(activePage - 1);\n            }}\n            disabled={activePage === 1}\n          >\n            {this.props.previousText}\n          </PageButtonComponent>\n        </div>\n        <div className=\"Table__visiblePagesWrapper\">\n          {visiblePages.map((page, index, array) => {\n            return (\n              <PageButtonComponent\n                key={page}\n                className={\n                  activePage === page\n                    ? \"Table__pageButton Table__pageButton--active\"\n                    : \"Table__pageButton\"\n                }\n                onClick={this.changePage.bind(null, page)}\n              >\n                {array[index - 1] + 2 < page ? `...${page}` : page}\n              </PageButtonComponent>\n            );\n          })}\n        </div>\n        <div className=\"Table__nextPageWrapper\">\n          <PageButtonComponent\n            className=\"Table__pageButton\"\n            onClick={() => {\n              if (activePage === this.props.pages) return;\n              this.changePage(activePage + 1);\n            }}\n            disabled={activePage === this.props.pages}\n          >\n            {this.props.nextText}\n          </PageButtonComponent>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}