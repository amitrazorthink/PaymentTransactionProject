{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from \"react\";\n// import React from 'react';\n// function Table(props) {\n//   console.log('props in Table', props);\n//   const tableData = props.data;\n//   console.log('tableDta', tableData);\n//   // console.log('tableDta', tableData.length);\n//   const tData = (tableData && tableData.length) ?\n//     tableData.map(i => {\n//       return(\n//         <>\n//        <tr className=\"rowClass\">\n//         <td>{i.transactionId}</td>\n//         <td>{i.userName}</td>\n//         <td>{i.paymentMode}</td>\n//         <td>{i.amount}</td>\n//       </tr>\n//       <style jsx>{`\n//              .rowClass , td{\n//             border: 1px solid #000 !important;\n//             padding: 5px;\n//             text-align: center;\n//         }\n//         tr td {\n//           width: 27vw;\n//         }\n//         `}</style>\n//       </>\n//          )\n//        }) : <p>Loading ...</p>\n//  return (\n//     <div className=\"tableDiv\">\n//        <table>\n//          <tr>\n//            <th>Transaction ID</th>\n//            <th>User Name</th>\n//            <th>Payment Mode</th>\n//            <th>Amount</th>\n//          </tr>\n//          <tbody>\n//            {tData}\n//          </tbody>\n//        </table>\n//        <style jsx>{`\n// table{\n//   width: 100%;\n//   border: 1px solid #7a7a7a;\n//   background-color: #f3f3f3;\n//   border-collapse: collapse;\n//   background: #ccc;\n//     font-weight: normal;\n//      font-family: sans-serif;\n//    font-size: 12px;\n//      width: 100%;\n// }\n//   tbody{\n//     height:200px;\n//     overflow-y:auto;\n//     width: 100%;\n//     }\n//   tbody,tr,td{\n//     display:inline-block;\n//     border: 1px solid #7a7a7a;\n//   }\n//   tbody\n//     td{\n//       float:left;\n//     }\n//   thead {\n//     tr\n//       th\n//         float:left;\n//        background-color: #f39c12;\n//        border-color:#e67e22;\n//       }\n//       th, td {\n//         padding: 5px;\n//         text-align: center;\n//         width: 27vw;\n//          }\n//          .tableDiv {\n//           background: #d9d8d9;\n//           margin: auto;\n//           width: 75%;\n//           padding: 21px;\n//           margin-top: 15px;\n//         }\n//              `}</style>\n//            </div>\n//       )\n// }\n// export default Table;\nimport ReactTable from \"react-table\";\nimport Pagination from \"./Pagination\";\nimport \"react-table/react-table.css\";\nimport \"./styles.css\";\nexport var Table = function Table(props) {\n  return React.createElement(ReactTable, {\n    PaginationComponent: Pagination,\n    data: makeData(),\n    columns: [{\n      Header: \"Transaction ID\",\n      accessor: \"transactionId\",\n      minWidth: 300\n    }, {\n      Header: \"User Name\",\n      accessor: \"userName\",\n      minWidth: 300\n    }, {\n      Header: \"Payment Mode\",\n      accessor: \"paymentMode\",\n      minWidth: 300\n    }, {\n      Header: \"Amount\",\n      accessor: \"amount\",\n      minWidth: 300\n    }, {\n      Header: \"Visits\",\n      accessor: \"visits\",\n      minWidth: 300\n    }]\n  });\n};\n\nvar transaction = function transaction(props) {\n  return {\n    transactionId: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    userName: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    paymentMode: Math.floor(Math.random() * 30),\n    amount: Math.floor(Math.random() * 100)\n  };\n};\n\nexport function makeData() {\n  var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2000;\n  return range(len).map(function (d) {\n    return _objectSpread({}, transactions(), {\n      children: range(10).map(transactions)\n    });\n  });\n}","map":{"version":3,"sources":["/Users/amithkumar/with-redux-saga/components/Table.js"],"names":["ReactTable","Pagination","Table","props","makeData","Header","accessor","minWidth","transaction","transactionId","namor","generate","words","numbers","userName","paymentMode","Math","floor","random","amount","len","range","map","d","transactions","children"],"mappings":";;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AAEA,OAAOA,UAAP,MAAuB,aAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,6BAAP;AACA,OAAO,cAAP;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACxB,oBAAC,UAAD;AACE,IAAA,mBAAmB,EAAEF,UADvB;AAEE,IAAA,IAAI,EAAEG,QAAQ,EAFhB;AAGE,IAAA,OAAO,EAAE,CACP;AACEC,MAAAA,MAAM,EAAE,gBADV;AAEEC,MAAAA,QAAQ,EAAE,eAFZ;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KADO,EAMP;AACEF,MAAAA,MAAM,EAAE,WADV;AAEEC,MAAAA,QAAQ,EAAE,UAFZ;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KANO,EAWP;AACEF,MAAAA,MAAM,EAAE,cADV;AAEEC,MAAAA,QAAQ,EAAE,aAFZ;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAXO,EAgBP;AACEF,MAAAA,MAAM,EAAE,QADV;AAEEC,MAAAA,QAAQ,EAAE,QAFZ;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAhBO,EAqBP;AACEF,MAAAA,MAAM,EAAE,QADV;AAEEC,MAAAA,QAAQ,EAAE,QAFZ;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KArBO;AAHX,IADwB;AAAA,CAAnB;;AAkCP,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACL,KAAD,EAAW;AAC7B,SAAO;AACLM,IAAAA,aAAa,EAAEC,KAAK,CAACC,QAAN,CAAe;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,OAAO,EAAE;AAArB,KAAf,CADV;AAELC,IAAAA,QAAQ,EAAEJ,KAAK,CAACC,QAAN,CAAe;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,OAAO,EAAE;AAArB,KAAf,CAFL;AAGLE,IAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAHR;AAILC,IAAAA,MAAM,EAAEH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAJH,GAAP;AAMD,CAPD;;AASA,OAAO,SAASd,QAAT,GAA8B;AAAA,MAAZgB,GAAY,uEAAN,IAAM;AACnC,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,GAAX,CAAe,UAAAC,CAAC,EAAI;AACzB,6BACKC,YAAY,EADjB;AAEEC,MAAAA,QAAQ,EAAEJ,KAAK,CAAC,EAAD,CAAL,CAAUC,GAAV,CAAcE,YAAd;AAFZ;AAID,GALM,CAAP;AAMD","sourcesContent":["// import React from 'react';\n\n// function Table(props) {\n//   console.log('props in Table', props);\n//   const tableData = props.data;\n//   console.log('tableDta', tableData);\n//   // console.log('tableDta', tableData.length);\n\n\n//   const tData = (tableData && tableData.length) ?\n//     tableData.map(i => {\n//       return(\n//         <>\n//        <tr className=\"rowClass\">\n//         <td>{i.transactionId}</td>\n//         <td>{i.userName}</td>\n//         <td>{i.paymentMode}</td>\n//         <td>{i.amount}</td>\n//       </tr>\n//       <style jsx>{`\n//              .rowClass , td{\n//             border: 1px solid #000 !important;\n//             padding: 5px;\n//             text-align: center;\n//         }\n//         tr td {\n//           width: 27vw;\n//         }\n        \n//         `}</style>\n//       </>\n//          )\n//        }) : <p>Loading ...</p>\n\n//  return (\n//     <div className=\"tableDiv\">\n//        <table>\n//          <tr>\n//            <th>Transaction ID</th>\n//            <th>User Name</th>\n//            <th>Payment Mode</th>\n//            <th>Amount</th>\n//          </tr>\n//          <tbody>\n//            {tData}\n//          </tbody>\n//        </table>\n//        <style jsx>{`\n       \n\n// table{\n//   width: 100%;\n//   border: 1px solid #7a7a7a;\n//   background-color: #f3f3f3;\n//   border-collapse: collapse;\n//   background: #ccc;\n//     font-weight: normal;\n//      font-family: sans-serif;\n//    font-size: 12px;\n//      width: 100%;\n// }\n//   tbody{\n//     height:200px;\n//     overflow-y:auto;\n//     width: 100%;\n//     }\n//   tbody,tr,td{\n//     display:inline-block;\n//     border: 1px solid #7a7a7a;\n//   }\n//   tbody\n//     td{\n//       float:left;\n//     }\n  \n//   thead {\n//     tr\n//       th\n//         float:left;\n//        background-color: #f39c12;\n//        border-color:#e67e22;\n//       }\n//       th, td {\n//         padding: 5px;\n//         text-align: center;\n//         width: 27vw;\n//          }\n//          .tableDiv {\n//           background: #d9d8d9;\n//           margin: auto;\n//           width: 75%;\n//           padding: 21px;\n//           margin-top: 15px;\n//         }\n\n     \n//              `}</style>\n//            </div>\n  \n//       )\n// }\n\n// export default Table;\n\nimport ReactTable from \"react-table\";\nimport Pagination from \"./Pagination\";\nimport \"react-table/react-table.css\";\nimport \"./styles.css\";\n\nexport const Table = props => (\n  <ReactTable\n    PaginationComponent={Pagination}\n    data={makeData()}\n    columns={[\n      {\n        Header: \"Transaction ID\",\n        accessor: \"transactionId\",\n        minWidth: 300\n      },\n      {\n        Header: \"User Name\",\n        accessor: \"userName\",\n        minWidth: 300\n      },\n      {\n        Header: \"Payment Mode\",\n        accessor: \"paymentMode\",\n        minWidth: 300\n      },\n      {\n        Header: \"Amount\",\n        accessor: \"amount\",\n        minWidth: 300\n      },\n      {\n        Header: \"Visits\",\n        accessor: \"visits\",\n        minWidth: 300\n      }\n    ]}\n  />\n);\n\nconst transaction = (props) => {\n  return {\n    transactionId: namor.generate({ words: 1, numbers: 0 }),\n    userName: namor.generate({ words: 1, numbers: 0 }),\n    paymentMode: Math.floor(Math.random() * 30),\n    amount: Math.floor(Math.random() * 100),\n  };\n};\n\nexport function makeData(len = 2000) {\n  return range(len).map(d => {\n    return {\n      ...transactions(),\n      children: range(10).map(transactions)\n    };\n  });\n}"]},"metadata":{},"sourceType":"module"}