{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nexport var actionTypes = {\n  FAILURE: 'FAILURE',\n  INCREMENT: 'INCREMENT',\n  DECREMENT: 'DECREMENT',\n  RESET: 'RESET',\n  LOAD_DATA: 'LOAD_DATA',\n  LOAD_DATA_SUCCESS: 'LOAD_DATA_SUCCESS',\n  START_CLOCK: 'START_CLOCK',\n  TICK_CLOCK: 'TICK_CLOCK',\n  ACTION_SAVE_TRANSACTION: 'ACTION_SAVE_TRANSACTION',\n  ACTION_SAVE_TRANSACTION_SUCCESS: 'ACTION_SAVE_TRANSACTION_SUCCESS',\n  ACTION_SAVE_TRANSACTION_ERROR: 'ACTION_SAVE_TRANSACTION_ERROR'\n};\nexport function saveTransaction() {\n  return {\n    type: actionTypes.ACTION_SAVE_TRANSACTION\n  };\n}\nexport var saveTransactionError = function saveTransactionError(payload) {\n  return {\n    type: actionTypes.ACTION_SAVE_TRANSACTION_ERROR,\n    payload: payload\n  };\n};\nexport var saveTransactionSuccess = function saveTransactionSuccess(payload) {\n  return {\n    type: actionTypes.ACTION_SAVE_TRANSACTION_SUCCESS,\n    payload: payload\n  };\n};\nexport function failure(error) {\n  return {\n    type: actionTypes.FAILURE,\n    error: error\n  };\n}\nexport function increment() {\n  return {\n    type: actionTypes.INCREMENT\n  };\n}\nexport function decrement() {\n  return {\n    type: actionTypes.DECREMENT\n  };\n}\nexport function reset() {\n  return {\n    type: actionTypes.RESET\n  };\n}\nexport function loadData() {\n  return {\n    type: actionTypes.LOAD_DATA\n  };\n}\nexport function loadDataSuccess(data) {\n  return {\n    type: actionTypes.LOAD_DATA_SUCCESS,\n    data: data\n  };\n}\nexport function startClock() {\n  return {\n    type: actionTypes.START_CLOCK\n  };\n}\nexport function tickClock(isServer) {\n  return {\n    type: actionTypes.TICK_CLOCK,\n    light: !isServer,\n    ts: _Date$now()\n  };\n}","map":{"version":3,"sources":["/Users/amithkumar/with-redux-saga/actions.js"],"names":["actionTypes","FAILURE","INCREMENT","DECREMENT","RESET","LOAD_DATA","LOAD_DATA_SUCCESS","START_CLOCK","TICK_CLOCK","ACTION_SAVE_TRANSACTION","ACTION_SAVE_TRANSACTION_SUCCESS","ACTION_SAVE_TRANSACTION_ERROR","saveTransaction","type","saveTransactionError","payload","saveTransactionSuccess","failure","error","increment","decrement","reset","loadData","loadDataSuccess","data","startClock","tickClock","isServer","light","ts"],"mappings":";AAAA,OAAO,IAAMA,WAAW,GAAG;AACzBC,EAAAA,OAAO,EAAE,SADgB;AAEzBC,EAAAA,SAAS,EAAE,WAFc;AAGzBC,EAAAA,SAAS,EAAE,WAHc;AAIzBC,EAAAA,KAAK,EAAE,OAJkB;AAKzBC,EAAAA,SAAS,EAAE,WALc;AAMzBC,EAAAA,iBAAiB,EAAE,mBANM;AAOzBC,EAAAA,WAAW,EAAE,aAPY;AAQzBC,EAAAA,UAAU,EAAE,YARa;AASzBC,EAAAA,uBAAuB,EAAE,yBATA;AAUzBC,EAAAA,+BAA+B,EAAE,iCAVR;AAWzBC,EAAAA,6BAA6B,EAAE;AAXN,CAApB;AAcP,OAAO,SAASC,eAAT,GAA4B;AACjC,SAAO;AAAEC,IAAAA,IAAI,EAAEb,WAAW,CAACS;AAApB,GAAP;AACD;AAED,OAAO,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,OAAO;AAAA,SAAK;AAC9CF,IAAAA,IAAI,EAAEb,WAAW,CAACW,6BAD4B;AAE9CI,IAAAA,OAAO,EAAPA;AAF8C,GAAL;AAAA,CAApC;AAMP,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAD,OAAO;AAAA,SAAK;AAChDF,IAAAA,IAAI,EAAEb,WAAW,CAACU,+BAD8B;AAEhDK,IAAAA,OAAO,EAAPA;AAFgD,GAAL;AAAA,CAAtC;AAKP,OAAO,SAASE,OAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAO;AACLL,IAAAA,IAAI,EAAEb,WAAW,CAACC,OADb;AAELiB,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,SAAT,GAAsB;AAC3B,SAAO;AAAEN,IAAAA,IAAI,EAAEb,WAAW,CAACE;AAApB,GAAP;AACD;AAED,OAAO,SAASkB,SAAT,GAAsB;AAC3B,SAAO;AAAEP,IAAAA,IAAI,EAAEb,WAAW,CAACG;AAApB,GAAP;AACD;AAED,OAAO,SAASkB,KAAT,GAAkB;AACvB,SAAO;AAAER,IAAAA,IAAI,EAAEb,WAAW,CAACI;AAApB,GAAP;AACD;AAED,OAAO,SAASkB,QAAT,GAAqB;AAC1B,SAAO;AAAET,IAAAA,IAAI,EAAEb,WAAW,CAACK;AAApB,GAAP;AACD;AAED,OAAO,SAASkB,eAAT,CAA0BC,IAA1B,EAAgC;AACrC,SAAO;AACLX,IAAAA,IAAI,EAAEb,WAAW,CAACM,iBADb;AAELkB,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,UAAT,GAAuB;AAC5B,SAAO;AAAEZ,IAAAA,IAAI,EAAEb,WAAW,CAACO;AAApB,GAAP;AACD;AAED,OAAO,SAASmB,SAAT,CAAoBC,QAApB,EAA8B;AACnC,SAAO;AACLd,IAAAA,IAAI,EAAEb,WAAW,CAACQ,UADb;AAELoB,IAAAA,KAAK,EAAE,CAACD,QAFH;AAGLE,IAAAA,EAAE,EAAE;AAHC,GAAP;AAKD","sourcesContent":["export const actionTypes = {\n  FAILURE: 'FAILURE',\n  INCREMENT: 'INCREMENT',\n  DECREMENT: 'DECREMENT',\n  RESET: 'RESET',\n  LOAD_DATA: 'LOAD_DATA',\n  LOAD_DATA_SUCCESS: 'LOAD_DATA_SUCCESS',\n  START_CLOCK: 'START_CLOCK',\n  TICK_CLOCK: 'TICK_CLOCK',\n  ACTION_SAVE_TRANSACTION: 'ACTION_SAVE_TRANSACTION',\n  ACTION_SAVE_TRANSACTION_SUCCESS: 'ACTION_SAVE_TRANSACTION_SUCCESS',\n  ACTION_SAVE_TRANSACTION_ERROR: 'ACTION_SAVE_TRANSACTION_ERROR',\n}\n\nexport function saveTransaction () {\n  return { type: actionTypes.ACTION_SAVE_TRANSACTION }\n}\n\nexport const saveTransactionError = payload => ({\n  type: actionTypes.ACTION_SAVE_TRANSACTION_ERROR,\n  payload,\n});\n\n\nexport const saveTransactionSuccess = payload => ({\n  type: actionTypes.ACTION_SAVE_TRANSACTION_SUCCESS,\n  payload,\n});\n\nexport function failure (error) {\n  return {\n    type: actionTypes.FAILURE,\n    error\n  }\n}\n\nexport function increment () {\n  return { type: actionTypes.INCREMENT }\n}\n\nexport function decrement () {\n  return { type: actionTypes.DECREMENT }\n}\n\nexport function reset () {\n  return { type: actionTypes.RESET }\n}\n\nexport function loadData () {\n  return { type: actionTypes.LOAD_DATA }\n}\n\nexport function loadDataSuccess (data) {\n  return {\n    type: actionTypes.LOAD_DATA_SUCCESS,\n    data\n  }\n}\n\nexport function startClock () {\n  return { type: actionTypes.START_CLOCK }\n}\n\nexport function tickClock (isServer) {\n  return {\n    type: actionTypes.TICK_CLOCK,\n    light: !isServer,\n    ts: Date.now()\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}